CUR_PATH             := $(shell pwd)
HOME_PATH            := $(abspath $(CUR_PATH)/../../..)

include $(HOME_PATH)/build/config.mak

SRC_PATH             := $(CUR_PATH)
SAMPLE_PATH          := $(CUR_PATH)/..
BASE_PATH            := $(HOME_PATH)/msp/component
OUT_PATH             := $(MSP_OUT_PATH)

PRJ_OUT_HOME         := $(HOME_PATH)/build/out/$(PROJECT)
OBJ_OUT_PATH         := $(PRJ_OUT_HOME)/objs
SRC_RELATIVE_PATH    := $(subst $(HOME_PATH)/,,$(CUR_PATH))
TARGET_OUT_PATH      := $(OBJ_OUT_PATH)/$(SRC_RELATIVE_PATH)

LIB_PATH             := $(OUT_PATH)/lib

# output
MOD_NAME 		:= sample_avs
OUTPUT 			:= $(TARGET_OUT_PATH)/.obj

# source
SRCS 			:= $(wildcard $(SRC_PATH)/*.c) \
				$(wildcard $(SRC_PATH)/common/*.c)

CINCLUDE		+= -I$(SRC_PATH) \
				-I$(OUT_PATH)/include \
				-I$(SAMPLE_PATH)/common \

OBJS                    := $(SRCS:%.c=$(OUTPUT)/%.o)
DEPS			:= $(OBJS:%.o=%.d)

vpath %.c $(addsuffix :,$(dir $(patsubst %.c,%.o,$(SRCS))))

# exec
TARGET			:= $(MOD_NAME)

# build flags
CFLAGS			:= ${EXEC_FLAG} -Wall -Wl,-rpath-link=$(LIB_PATH)

ifeq ($(debug),yes)
CFLAGS			+= -O0 -ggdb3
else
CFLAGS			+= -O2
endif

CFLAGS			+= -Wno-unused -Wno-pointer-sign

CLIB                    := -L$(LIB_PATH) -lax_avs \
				-lax_sys \
				-lm -lpthread

# install
INSTALL_BIN	:= $(TARGET)
MV_TARGET       := $(INSTALL_BIN)
INSTALL_DATA := $(CUR_PATH)/data/avs
# link
LINK = $(CC)

include $(HOME_PATH)/build/rules.mak

