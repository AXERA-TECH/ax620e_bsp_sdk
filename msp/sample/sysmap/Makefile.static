CUR_PATH             := $(shell pwd)
HOME_PATH            := $(abspath $(CUR_PATH)/../../..)

include $(HOME_PATH)/build/color.mk
include $(HOME_PATH)/build/config.mak

.PHONY: clean all install

PRJ_OUT_HOME         := $(HOME_PATH)/build/out/$(PROJECT)
OBJ_OUT_PATH         := $(PRJ_OUT_HOME)/objs
SRC_RELATIVE_PATH    := $(subst $(HOME_PATH)/,,$(CUR_PATH))
TARGET_OUT_PATH      := $(OBJ_OUT_PATH)/$(SRC_RELATIVE_PATH)

OUT_PATH             := $(MSP_OUT_PATH)
SRC_PATH             := $(CUR_PATH)

BASE_PATH            := $(HOME_PATH)/msp/component
LIB_PATH             := $(MSP_OUT_PATH)/lib

# output
MOD_NAME 		:= sample_sysmap_s
OUTPUT 			:= $(TARGET_OUT_PATH)/.obj_a

# source
SRCS 			:= $(wildcard $(SRC_PATH)/*.c)

CINCLUDE		:= -I$(SRC_PATH) \
				-I$(OUT_PATH)/include

OBJS 			:= $(SRCS:%.c=$(OUTPUT)/%.o)
DEPS			:= $(OBJS:%.o=%.d)

vpath %.c $(addsuffix :,$(dir $(patsubst %.c,%.o,$(SRCS))))

# exec
TARGET			:= $(MOD_NAME)

CLIB			+= -L$(LIB_PATH) -lax_sys -lpthread

# build flags
CFLAGS			:= ${EXEC_FLAG} -Wall -Wl,-rpath-link=$(LIB_PATH)
ifneq ($(asan),yes)
CFLAGS			+= -static
endif
ifeq ($(debug),yes)
CFLAGS			+= -O0 -ggdb3
else
CFLAGS			+= -O2
endif

# install
INSTALL_TARGET	:= $(TARGET)
MV_TARGET	:= $(INSTALL_TARGET)
INSTALL_DIR		:= $(ROOTFS_TARGET_PATH)/bin/

# link
LINK = $(CC)

include $(HOME_PATH)/build/rules.mak
