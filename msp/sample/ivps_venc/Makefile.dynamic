CUR_PATH            := $(shell pwd)
HOME_PATH           := $(abspath $(CUR_PATH)/../../..)

include $(HOME_PATH)/build/config.mak

PRJ_OUT_HOME        := $(HOME_PATH)/build/out/$(PROJECT)
OBJ_OUT_PATH        := $(PRJ_OUT_HOME)/objs
SRC_RELATIVE_PATH   := $(subst $(HOME_PATH)/,,$(CUR_PATH))
TARGET_OUT_PATH     := $(OBJ_OUT_PATH)/$(SRC_RELATIVE_PATH)

SRC_PATH            := $(CUR_PATH)
SAMPLE_PATH         := $(CUR_PATH)/..
BASE_PATH           := $(HOME_PATH)/msp/component
OUT_PATH            := $(MSP_OUT_PATH)
LIB_PATH            := $(OUT_PATH)/lib
COMMON_PATH         := $(BASE_PATH)/common
SSL_PATH            := $(HOME_PATH)/third-party/openssl/$(ARCH)
LIVE_PATH           := $(HOME_PATH)/third-party/live/out/$(ARCH)/$(LIBC)

USE_OPENSSL         := no

# output
MOD_NAME 		:= sample_ivps_venc
OUTPUT 			:= $(TARGET_OUT_PATH)/.obj

# source
SRCS 			:= $(wildcard $(SRC_PATH)/*.c)

CINCLUDE		+= -I$(SRC_PATH) \
			-I$(OUT_PATH)/include \
			-I$(SAMPLE_PATH)/common

OBJS 			:= $(SRCS:%.c=$(OUTPUT)/%.o)
OBJS 			+= $(SRCCPPS:%.cpp=$(OUTPUT)/%.o)
DEPS			:= $(OBJS:%.o=%.d)

vpath %.c $(addsuffix :,$(dir $(patsubst %.c,%.o,$(SRCS))))

# exec
TARGET			:= $(MOD_NAME)

CFLAGS			:= ${EXEC_FLAG}

# build flags
ifeq ($(debug),yes)
CFLAGS			+= -Werror -Wall -O0 -ggdb3
else
CFLAGS			+= -Werror -Wall -O2
endif

CFLAGS			+= -ldl

ifeq ($(USE_OPENSSL),no)
CFLAGS            += -DNO_OPENSSL
endif

# dependency
CLIB			+= -Wl,-rpath-link=$(OUT_PATH)/lib
CLIB			+= -L$(OUT_PATH)/lib
CLIB			+= -lax_venc
CLIB			+= -lax_ivps
CLIB			+= -lax_sys
#CLIB			+= -lax_3a
CLIB			+= -lax_proton
#CLIB			+= -lax_engine
#CLIB			+= -lax_mipi
CLIB			+= -lm -lpthread -lrt -ldl -lstdc++
#CLIB			+= -lax_nt_stream
#CLIB			+= -lax_nt_ctrl
ifeq ($(USE_OPENSSL),yes)
CLIB            += -L$(SSL_PATH)/$(LIBC)/lib -lssl -lcrypto
endif
#CLIB			+= -L$(LIVE_PATH)/lib -lliveMedia -lgroupsock -lBasicUsageEnvironment -lUsageEnvironment

# install
INSTALL_BIN	:= $(TARGET)
MV_TARGET	:= $(INSTALL_BIN)

# link
LINK = $(CC)

include $(HOME_PATH)/build/rules.mak
